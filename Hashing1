// searching
#include <stdio.h>

bool seqSearch(int list[], int n, int target)
{
	int i = 0;
	while (i < n && list[i] != target)
	{
		i++;
	}
	
	return (i < n);
}

bool binarySearch(int list[], int n, int target)
{
	int begin = 0;
	int mid = 0;
	int end = n - 1;

	while (begin <= end)
	{
		mid = (begin + end) / 2;
		if (target > list[mid])
		{
			begin = mid + 1;
		}
		else if (target < list[mid])
		{
			end = mid - 1;
		}
		else
		{
			begin = end + 1; // to stop the loop
		}
	}

	mid;

	return (target == list[mid]);
}

int main()
{
	int num[12] = { 4, 7, 8, 10, 14, 21, 22, 36, 62, 77, 81, 91 };
	bool loc1 = seqSearch(num, 12, 4);
	printf("%d\n", loc1);
	bool loc2 = seqSearch(num, 12, 30);
	printf("%d\n", loc2);

	bool loc3 = binarySearch(num, 12, 7);
	printf("%d\n", loc3);
	bool loc4 = binarySearch(num, 12, 80);
	printf("%d\n", loc4);
}

// hashing
/* Direct Method
   Modulo-Division Method
   Digit Extraction Method
   Midsquare Method
   Folding Methods
   Rotation Method
   Pseudorandom Hashing */
